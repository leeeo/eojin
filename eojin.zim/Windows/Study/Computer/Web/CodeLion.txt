Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2015-06-01T11:26:56+09:00

====== CodeLion ======
[[[http://codelion.net/|Link]]]


===== 0주차 =====
AWS로 서버를 구축하고, 도메인을 등록하여 서버에 연결하며, 서버에 접속하고 리눅스를 사용하는 법을 배웁니다. 또한 루비와 레일스를 개발 서버에 설치합니다. 여러분이 본격적으로 웹 프로그래밍을 시작하기 위한 인프라를 구축하는 단계라고 할 수 있습니다. 

=== 0강:: Intro, 서버 구축 ===

== 0. 코드라이언 소개 ==
	프로그래밍이 대세다
	왜 코드라이언인가?
	어떠한 기술들을 배우게 되는가?
		[0] 프로그래밍 언어 - 루비
		[1] 웹 프레임워크 - 레일스
		[2] 웹 페이지 제작 기술 - HTML/CSS
		[3] 코드 에디터 - 빔
		[4] 클라우드 서버 제공 서비스 - AWS
		[5] 기타 - 리눅스/Git과 GitHub


== 1. 서버 구축 방법 ==
	서버와 클라이언트의 정체
	개발 서버와 서비스 서버
	서버를 원격으로 구축하는 방법
	내 서버에 정식으로 이름 붙이기
	

== 2. AWS로 서버 구축하기 ==
	AWS의 특징
		AWS - 클라우드 컴퓨팅 서비스를 통해 서버 제공
	AWS 계정 만들기
	AWS에서 내 서버 만들기
	내 서버의 보안 설정하기


=== 1강:: 도메인 등록, 서버 접속 ===

== 3. 도메인 등록하고 내 서버와 연결하기 ==
	AWS 서버의 IP주소 확인하기
		Public IP - 52.74.194.68
	도메인 등록하기
		한국인터넷진흥원(KISA)[[[http://krnic.kisa.or.kr/jsp/popup/agencyFeePop.jsp|Link]]] - 도메인 등록 대행사별 가격비교 정보
		가비아[[[https://domain.gabia.com|Link]]]
		Domain - leeeo.kr or www.leeeo.kr
	DNS 서버 설정하기
	

== 4. 서버 접속 방법 ==
	내 서버로 접근하는 두 가지 방법
		‘테이크아웃 커피 가게’가 서버라고 하였는데, 중요한 것은 ‘나’는 커피 판매를 위해 여러 가지 준비 작업만 할 뿐, 직접 커피를 팔지는 않는다는 점이다. 실제로 손님들에게 커피를 파는 것은 ‘아르바이트생들’이다. 그 말인즉슨, ‘나(=관리자)’는 ‘테이크아웃 커피 가게(=서버)’의 ‘카운터 안으로 들어와서(=접속해서)’ ‘식기와 재료들(=데이터)’을 준비해 놓고, ‘아르바이트생들(=각종 프로그램)’을 ‘교육(=프로그래밍)’해 놓고 나서 가게 문을 열고 다시 나왔다.
		백 엔드(back end) 개발 - 서버 내부적으로 동작하는 방식을 정의하는 부분, 서버 시스템 접속
		프론트 엔드(front end) 개발 - 클라이언트에게 실제 보이는 부분, 외부 요청
	서버 접속을 위해 사용하는 프로그램
		터미널 - 리눅스나 유닉스(Unix) 등과 같이 기본적으로 명령어 기반으로 돌아가는 운영체제를 다루기 위해 사용하는 프로그램
		터미널을 통해 원격으로 내 서버에 접속
	웹 페이지 요청을 위해 사용하는 프로그램
		웹 브라우저(web browser) - 서버로의 웹 페이지 요청을 위해 사용하는 프로그램(크롬(Chrome), 인터넷 익스플로러(IE), 파이어폭스(Firefox), 사파리(Safari), 오페라(Opera) 등)
		크롬 사용
	서버와 파일을 주고받기 위해 사용하는 프로그램
		FTP 클라이언트 프로그램 - FileZilla, WinSCP, Cyberduck


== 5. 서버 접속 프로그램 ==
	AWS 서버 접속을 위한 준비 작업
	Mac OS용 접속 방법 - iTerm
	윈도우용 접속 방법 - PuTTY
		ec2-user@52.74.194.68
 

=== 2강:: 리눅스 사용법, 루비와 레일스 설치 ===

== 6. 리눅스의 기본 사용법(0) ==
	서버에서 사용하는 운영체제 - 리눅스
	경로 확인 및 이동하기(0)
		/ 디렉터리 : 루트(root) 디텍터리
		홈 디렉터리
		ls(list directory contents)
		pwd(print working directory)
		상대경로
		절대경로
		상대경로
	경로 확인 및 이동하기(1)
		여러 개의 상대 경로를 ‘/’로 연결하여 붙이면 한 번에 여러 단계를 이동
		홈 디렉터리(~) 이외의 디렉터리는 리눅스 시스템과 관련된 디렉터리들이기 때문에 절대 건드리지 말아야
		

== 리눅스의 기본 사용법(1) ==


	파일 및 디렉터리 다루기(0)
		touch
		mkdir
	파일 및 디렉터리 다루기(1)
	고급학습: 기타 리눅스 명령어


== 루비와 레일스 설치하기 ==



	루비 설치하기
		gpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3
		\curl -sSL https://get.rvm.io | bash -s stable
		source .bash_profile
		rvm install 2.0.0
		ruby -v
	레일스 설치하기
		레일스는 루비 언어를 기반으로 하는 서버 프레임워크(framework) 기술 중 가장 많이 쓰이는 것
		gem install rails --version 4.0.1 --no-ri --no-rdoc
		라이브러리(library) - 어떤 특정한 기능을 수행하도록 미리 짜여진 파일과 코드의 조합
		젬(gem) - 루비에 대해서 쓰이는 라이브러리의 기본 단위
	레일스 프로젝트 생성 및 서버 구동하기
		프로젝트(project) - 웹 서비스 자체의 단위
		echo
		[[leeeo.kr:3000]]
		

===== 1주차 =====
여러분이 앞으로 코드를 작성하는 데 사용할 에디터인 빔을 배웁니다. 빔은 처음엔 외워야 할 단축키들이 많기 때문에 여러분들의 머리를 아프게 할 수도 있습니다. 하지만 일단 빔에 익숙해지고 나면, 마치 해커가 된 것과도 같은 여러분 자신을 발견할 수 있을 것입니다. 그리고 웹 사이트를 꾸미는데 사용하는 프론트 엔드 개발 언어인 HTML의 기초를 배웁니다. 

=== 3강:: 빔 에디터(0) ===

== 0. 빔 들어가기 ==
	리눅스의 코드 에디터 - 빔(Vim)
		CLI 방식의 코드 에디터(code editor) 사용법
		빔, Emacs, Nano 등의 코드 에디터의 공통적인 특징은, 모든 조작이 키보드를 통해서만 이루어진다
		GUI 환경에서도 기존의 메모장이나 TextEdit보다 진화된 텍스트 에디터가 존재한다. Notepad++나 Sublime Text와 같은 텍스트 에디터,  GUI 환경에서의 코드 에디터
	빔의 대표적인 특징
		[0] 멋있다(?)
		[1] 유행을 타지 않고 오랫동안 사랑받아 온 에디터이다
		[2] 일단 숙련되면 초고속 코드 입력이 가능해진다
			단어를 바꾸고 싶으면 cw(change word)
			단어를 지우고 싶으면 dw(delete word)
		[3] 매우 작고, 빠르다
		[4] 대부분의 운영체제를 지원한다
	초심자가 빔을 대하는 자세
	

== 1. 빔의 기본 사용법 (0) ==
	빔으로 파일 작성 및 수정하기 (0)
		[0] 빔으로 새 파일 작성하고 저장하기
			입력 모드(insert mode)
			일반 모드(normal mode)
			명령행 모드(command-line mode) - 빔이 명령을 받아들일 준비가 되었다
			키 	설명
			i 	현재 커서 위치에서 입력 모드로 전환 (Insert)
			o 	현재 커서 바로 아래에 새로운 행을 하나 만들고, 새로운 행의 맨 앞으로 커서가 이동하면서 입력 모드로 전환 (Open line)
			a 	커서를 현재 위치에서 한 칸 뒤로 옮긴 뒤, 입력 모드로 전환 (Append)
	빔으로 파일 작성 및 수정하기 (1)
		[1] 빔으로 기존 파일 수정하기 - 커서 이동하기
			h 키는 ‘좌측’, j 키는 ‘하측’, k 키는 ‘상측’, l 키는 ‘우측’
			키 	설명
			e 	바로 다음 단어의 맨 마지막 문자로 커서 이동 (end of word)
			w 	바로 다음 단어의 맨 첫 번째 문자로 커서 이동 (word)
			b 	바로 이전 단어의 맨 첫 번째 문자로 커서 이동 (before word)
			$ 	현재 위치한 행의 맨 마지막 문자로 커서 이동
			^ 	현재 위치한 행의 맨 첫 번째 문자로 커서 이동
			gg 	현재 파일 내용의 맨 첫 번째 행으로 커서 이동 (go)
			G 	현재 파일 내용의 맨 마지막 행으로 커서 이동
		[2] 빔으로 기존 파일 수정하기 - 코드 삭제하기
			키 	설명
			x 	현재 커서 위치에 있는 문자를 삭제
			X 	현재 커서 위치의 한 칸 앞의 문자를 삭제
			dd 	현재 커서가 위치한 행 전체를 삭제
			dw 	현재 커서 위치에서부터, 현재 위치한 단어의 마지막 부분까지의 문자를 모두 삭제
			d$ 	현재 커서 위치에서부터, 현재 위치한 행의 맨 마지막 부분까지의 문자를 모두 삭제
	빔으로 파일 작성 및 수정하기 (2)
		[3] 빔으로 기존 파일 수정하기 - 블록 지정, 복사/잘라내기 및 붙여넣기
			키 	설명
			v 	비주얼 모드로 전환 - 블록 지정 (visual)
			V 	현재 커서가 위치한 행 전체를 블록 지정
			y 	지정된 블록을 복사 (yank)
			yy 	현재 커서가 위치한 행 전체를 복사
			x 	지정된 블록을 잘라내기
			p 	복사하거나 잘라낸 내용을 현재 커서 위치의 바로 다음 위치에 붙여넣기 (paste)
		[4] 빔으로 기존 파일 수정하기 - 실행 취소, 다시 실행하기
			키 	설명
			u 	방금 수행한 작업을 실행 취소 (undo)
			Ctrl + r 	방금 실행 취소한 작업을 다시 실행 (redo)
			

== 2. 빔의 기본 사용법 (1) ==
	
	빔을 좀 더 능숙하게 사용하기 (0)
		[0] 빔으로 방대한 내용의 파일 다루기 - 내용 붙여넣기
			PuTTY 화면 위의 아무 곳에나 커서를 올려놓고 마우스 오른쪽 버튼
		[1] 빔으로 방대한 내용의 파일 다루기 - 화면 스크롤하기
			키 	설명
			Ctrl+f 	한 화면 아래 방향으로 스크롤
			Ctrl+b 	한 화면 윗 방향으로 스크롤
			Ctrl+d 	반 화면 아래 방향으로 스크롤
			Ctrl+u 	반 화면 윗 방향으로 스크롤
	
	빔을 좀 더 능숙하게 사용하기 (1)
		[2] 빔으로 방대한 내용의 파일 다루기 - 단어 찾기
			키 	설명
			n 	현재 위치 아래쪽에서 해당 단어가 등장하는 위치로 커서 이동
			N 	현재 위치 위쪽에서 해당 단어가 등장하는 위치로 커서 이동
		[3] 빔으로 방대한 내용의 파일 다루기 - 단어 찾아 바꾸기
			:%s/<기존 단어>/<새로운 단어>
	
	빔을 좀 더 능숙하게 사용하기 (2)
		[0] 빔으로 여러 파일을 동시에 다루기 - 파일 내비게이션 실행하기
			파일 내비게이션(navigation) - vi .
		[1] 빔으로 여러 파일을 동시에 다루기 - 화면 분할 및 화면 전환하기
			명령어(키) 	설명
			:vs . 	화면을 좌우로 분할한 뒤, 좌측 화면에 파일 내비게이션 표시 (vertical split)
			:sp . 	화면을 상하로 분할한 뒤, 상측 화면에 파일 내비게이션 표시 (split)
			Ctrl+ww 	(화면이 분할된 상태에서) 커서 위치 전환
			:wa 	(화면이 분할된 상태에서) 현재 편집하고 있는 파일을 모두 저장 (write all)
			:qa 	(화면이 분할된 상태에서) 현재 편집하고 있는 파일을 모두 종료 (quit all)
			

=== 4강:: 빔 에디터 (1) ===

== 3. 빔 환경 설정하기 ==

	빔을 원활히 사용하기 위한 옵션 지정하기 (0)
		[0] 빔 옵션 지정하기 - 행 번호 표시하기
			명령어 	설명
			:set nu
			:set nonu
		[1] 빔 옵션 지정하기 - 들여쓰기 관련 옵션 지정하기
			명령어 	설명
			:set nu 	화면 좌측에 행 번호 표시 (set number)
			:set ts=# 	입력 모드에서 Tab 키의 탭 크기를 스페이스 #칸 간격으로 지정 (set tabsize)
			:set sw=# 	일반 모드에서 >>, << 키를 통한 이동 크기를 스페이스 #칸 간격으로 지정 (set shiftwidth)
			:set ai 	입력 모드에서 자동 들여쓰기 적용 (set autoindent)
	빔을 원활히 사용하기 위한 옵션 지정하기 (1)
		[2] 빔 옵션 지정하기 - 색상 테마 설정하기
			명령어 	설명
			:colorscheme <색상 테마 이름> 	빔의 색상 테마 설정
			:colorscheme delek
			:colorscheme elflord
			vim color schemes
		[3] 빔 옵션 지정하기 - 내용 붙여넣기 수행 시 계단 현상 제거하기
			명령어 	설명
			:set paste 	(자동 들여쓰기 옵션이 켜진 상태에서) 붙여넣기 수행시 계단 현상 제거
	나만의 빔을 구성하기
		vi ~/.vimrc
		set nu
		colorscheme elflord
		set ts=2
		set sw=2
		set ai
		set paste
		Vim Spartan Training[[[http://choiyongchol.com/vim/go/|Link]]]


== 4. 빔으로 HTML 파일 작성하기 ==

	빔으로 HTML 파일 작성하기 (0)
		[0] HTML 파일 작성 연습 준비하기
		[1] HTML 파일 작성 연습 (0)
		[2] HTML 파일 작성 연습 (1)
	빔으로 HTML 파일 작성하기 (1) 
		[3] HTML 파일 작성 연습 (2)
		[4] HTML 파일 작성 연습 (3)


== 5. 빔으로 루비 파일 작성하기 ==
	빔으로 루비 파일 작성하기 (0)
		[0] 루비 파일 작성 연습 (0)
		[1] 루비 파일 작성 연습 (1)
		
	빔으로 루비 파일 작성하기 (1)
		[2] 루비 파일 작성 연습 (2)
		[3] 루비 파일 작성 연습 (3)


=== 5강:: HTML (0) ===

== 6. HTML 들어가기 ==
	웹 페이지를 만들어주는 언어 - HTML
		HTML은 웹 페이지를 만들어주는 언어
		HTML로 만든 웹 페이지는 전 세계 사람들이 언제든지 볼 수 있다.
	HTML의 중요한 특징
		[0] HTML의 핵심적인 요소 - 태그(tag)
			HTML 문서 상에서 정보를 표현하는 형식을 정의하는 요소로서, HTML 문서를 구성하는 문법적 표시
			HTML이 기본적으로 태그라는 요소로 구성되는 것은, HTML이 본질적으로 마크업 언어(markup language)의 속성을 지니고 있기 때문
			마크업(markup)이란 본래 신문사나 잡지사의 교정 기자들이 쓰는 특수 목적의 표기법
			(컴퓨터에서의) 마크업 언어란, 문서의 구조와 배치 양식에 대한 정보를 표현하는 언어
			HTML은 특별히 웹 브라우저에서 해석할 수 있도록 설계된 마크업 언어
		[1] HTML의 중요한 기능 - 하이퍼링크(Hyperlink)
			HTML에서의 하이퍼링크란, HTML 문서 내의 특정 요소와, 해당 문서 내의 다른 요소 혹은 다른 HTML 문서 내의 요소 간의 연결 관계를 의미
			하이퍼링크를 통해 다른 문서를 즉각적으로 참조할 수 있도록 구성된 문서를 하이퍼텍스트(hypertext)라고 한다.
	초심자가 HTML을 대하는 자세


== 7. HTML 기본 ==
	HTML 학습 준비하기
		<!DOCTYPE html> - 이것이 HTML 문서이다
		서버 구동 터미널, 작업 터미널
	HTML의 기본 구조 (0)
		[0] HTML 문서의 시작과 끝, html 태그
		[1] HTML 문서의 머리, head 태그
			html 태그 안은 크게 ‘머리’의 영역인 ‘head 태그’와 ‘몸통’의 영역인 ‘body 태그’로 나뉜다.
			‘title 태그’	- <title>Codelion :: Home</title>
			‘meta 태그’ - <meta charset="utf-8">
			‘메타 데이터(metadata)’ - 데이터를 설명하는 데이터
			문자 인코딩(인코딩(encoding)) - 문자나 기호들의 집합을 컴퓨터에서 저장하거나 통신에 사용할 목적으로 부호화하는 방식으로 정의
			오늘날 사용되는 대표적인 인코딩 - ASCII, EUC, UTF-8, UTF-16, UTF-32 등
		[2] HTML 문서의 몸통, body 태그
	HTML의 기본 구조 (1)
		[3] 태그에 속성 지정하기
			거의 대부분의 HTML 태그는 속성(attribute)을 가질 수 있다.
			속성값 지정이 필수적인 태그 중 가장 대표적인 것이 바로 a 태그이다.
		[4] 태그와 태그 간의 관계 - 부모와 자식, 조상과 후손, 그리고 형제
			- div 태그는 a 태그와 p 태그를 포함하고 있으므로, a 태그와 p 태그의 부모(parent)가 된다. 반대로 a 태그와 p 태그는 div 태그의 자식(child)이 된다.
			- a 태그는 h3 태그를 포함하고 있으므로, h3 태그의 부모가 된다. 반대로 h3 태그는 a 태그의 자식이 된다.
			- div 태그는 h3 태그의 부모의 부모이므로, h3 태그의 조상(ancestor)이 된다. 그리고 div 태그는 a 태그와 p 태그의 부모이자, 동시에 조상이라고 할 수 있다.
			- h3 태그는 div 태그의 자식의 자식이므로, div 태그의 후손(descendant)이 된다. 그리고 h3 태그는 a 태그의 자식이자, 동시에 후손이라고 할 수 있다.
			- a 태그와 p 태그는 같은 층위에 놓여 있으므로, 서로 형제(sibling)가 된다.


== 8. 주요 HTML 태그 익히기 (0) ==
	텍스트 관련 태그
		[0] 제목 표시하기 - h# 태그
		[1] 문단 표시하기 - p 태그, br 태그
			h# 	제목(heading) 표시 (#: 1..6)
			p 	문단(paragraph) 표시
			br 	줄바꿈(line break)
	리스트 관련 태그
		개조식 서술 방식 - 앞에 번호 혹은 표식을 붙여 가며 짧게 끊어서 중요한 요점이나 단어를 나열하는 경우
		리스트(list) 관련 태그 - HTML에서는 순서가 있는 리스트(ordered list)와 순서가 없는 리스트(unordered list)를 지원
		[0] 순서가 있는 리스트 표시하기 - ol, li 태그
			순서가 있는 리스트는 ‘ol 태그’를 사용
			리스트 내 각각의 항목들을 ‘li 태그’를 사용하여 표시
		[1] 순서가 없는 리스트 표시하기 - ul, li 태그
			순서가 없는 리스트는 ‘ul 태그’를 사용
			리스트 내 각각의 항목들을 ‘li 태그’를 사용하여 표시

			태그 	설명
			ol 	순서가 있는 리스트(ordered list) 표시
			ul 	순서가 없는 리스트(unordered list) 표시
			li 	순서가 있는/없는 리스트 안에서, 각각의 리스트 항목을 지정
		http://www.w3schools.com/tags/att_a_target.asp


===== 2주차 =====
지난 주차에 이어 HTML을 계속 배우고, 다음으로 웹 페이지를 꾸며주는 프론트 엔드 개발 언어인 CSS를 배웁니다. HTML과 CSS 지식을 기반으로, 프론트 엔드 프레임워크인 부트스트랩의 사용법을 배우며, 여러분의 역사적인 첫 번째 브랜딩 페이지를 제작해 볼 것입니다. 

=== 6강:: HTML(1) ===

== 0. 주요 HTML 태그 익히기 (1) ==
	하이퍼링크, 이미지, 주석 태그
		하이퍼링크(hyperlink) 태그
		이미지(image) 태그
		[0] 하이퍼링크 표시하기 - a 태그
			하이퍼링크를 표시할 때는 ‘a 태그’를 사용하며, a 태그의 href 속성값(hypertext reference)을 지정함으로써 해당 하이퍼링크를 통해 이동해 갈 웹 페이지의 URL을 지정
			새로운 창 - target="_blank"
		[1] 이미지 표시하기 - img 태그
		[2] 주석 달기
		태그 	설명
		a 	하이퍼링크 표시 (href 속성값으로 이동할 페이지 URL 지정)
		img 	이미지 표시 (src 속성값으로 표시할 이미지 파일 URL 지정)
		<!-- 주석 내용 --> 	주석 표시 (웹 페이지에서는 보이지 않음)
		
	표 관련 태그 (0)
		[0] 새로운 HTML 파일 생성하기
		[1] 표 만들기 (0) - table 태그, tr 태그, td 태그
			tr(table row) 태그
			td(table data) 태그

	표 관련 태그 (1)
		[2] 표 만들기 (1) - thead 태그, tbody 태그, th 태그
		[3] 표 만들기 (2) - 새로운 열 추가하기
			태그 	설명
			table 	표를 생성 (thead, tbody 태그를 포함)
			thead 	표의 머리에 해당, 표의 각 열에 대한 제목을 표시 (tr, th 태그를 포함)
			tbody 	표의 몸통에 해당, 표의 실제 내용을 표시 (tr, td 태그를 포함)
			tr 	표에 새로운 행을 추가
			th 	표에 새로운 열 제목을 추가
			td 	표에 새로운 열 데이터를 추가
			
== 1. 주요 HTML 태그 익히기 (2) ==
	폼 관련 태그 (0)
		[0] 폼의 기능을 이해하기 위한 배경 지식
			클라이언트는 ‘서버에게 정보를 요청하는 컴퓨터’, 서버는 ‘클라이언트의 요청에 따라 정보를 제공하는 컴퓨터’
			서버가 해당 웹 페이지의 HTML 파일을 여러분에게 전송하는 것
			어떤 특정 웹 페이지에 대한 클라이언트의 요청을 서버 측에서 받는 과정에서, 클라이언트 측으로 해당 요청과 관련된 일련의 데이터를 포함하여 전송하도록 요구
		웹 페이지의 URL 뒤에 ‘?’와 ‘=’ 등의 기호와 파라미터, 값 등의 내용을 추가하여 요청을 보내는 방식을 ‘GET 방식’
		파라미터와 값을 포함하여 요청을 보내는 또다른 방식으로 ‘POST 방식’
		
	폼 관련 태그 (1)
		[1] 폼 만들기 (0) - GET 방식, form 태그, input 태그
			폼을 만드는 태그는 ‘form 태그’이며, 이 안에 ‘input 태그’, ‘textarea 태그’, ‘select 태그’, ‘option 태그’ 등을 사용하여 폼의 모양을 구성
		[2] 폼 만들기 (1) - textarea 태그, select/option 태그
		
	폼 관련 태그 (2)
	
== 2. HTML 요소에 스타일 적용하기 ==




=== 7강:: CSS ===

== 3. CSS 들어가기 ==

== 4. CSS 기본 ==

== 5. CSS로 레이아웃 구성하기 ==



=== 8강:: Bootstrap, 브랜딩 페이지 만들기 ===

6. 부트스트랩 사용하기


7. 브랜딩 페이지 만들기 (0)


8. 브랜딩 페이지 만들기 (1)


====== Reference ======
